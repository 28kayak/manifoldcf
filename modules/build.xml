<project default="all">

    <target name="clean">
        <delete file="manifoldcf-*.zip"/>
        <delete file="manifoldcf-*.tar.gz"/>
        <delete dir="build"/>
        <delete dir="dist"/>
        <delete dir="test-output"/>
        <ant dir="framework" target="clean"/>
        <delete dir="framework/lib"/>
        <ant dir="connectors/activedirectory" target="clean"/>
        <delete dir="connectors/activedirectory/lib"/>
        <ant dir="connectors/documentum" target="clean"/>
        <delete dir="connectors/documentum/lib"/>
        <ant dir="connectors/filenet" target="clean"/>
        <delete dir="connectors/filenet/lib"/>
        <ant dir="connectors/filesystem" target="clean"/>
        <delete dir="connectors/filesystem/lib"/>
        <ant dir="connectors/gts" target="clean"/>
        <delete dir="connectors/gts/lib"/>
        <ant dir="connectors/jcifs" target="clean"/>
        <delete dir="connectors/jcifs/lib"/>
        <ant dir="connectors/jdbc" target="clean"/>
        <delete dir="connectors/jdbc/lib"/>
        <ant dir="connectors/livelink" target="clean"/>
        <delete dir="connectors/livelink/lib"/>
        <ant dir="connectors/solr" target="clean"/>
        <delete dir="connectors/solr/lib"/>
        <ant dir="connectors/memex" target="clean"/>
        <delete dir="connectors/memex/lib"/>
        <ant dir="connectors/meridio" target="clean"/>
        <delete dir="connectors/meridio/lib"/>
        <ant dir="connectors/nullauthority" target="clean"/>
        <delete dir="connectors/nullauthority/lib"/>
        <ant dir="connectors/nulloutput" target="clean"/>
        <delete dir="connectors/nulloutput/lib"/>
        <ant dir="connectors/rss" target="clean"/>
        <delete dir="connectors/rss/lib"/>
        <ant dir="connectors/sharepoint" target="clean"/>
        <delete dir="connectors/sharepoint/lib"/>
        <ant dir="connectors/webcrawler" target="clean"/>
        <delete dir="connectors/webcrawler/lib"/>
    </target>
    
    <target name="build-json">
        <mkdir dir="build/json/classes"/>
        <javac srcdir="json" destdir="build/json/classes" target="1.5" source="1.4" debug="true" debuglevel="lines,vars,source">
            <classpath>
            </classpath>
        </javac>
    </target>
    
    <target name="jar-json" depends="build-json">
        <mkdir dir="build/jar"/>
        <jar destfile="build/jar/json.jar" basedir="build/json/classes"/>
    </target>
    
    <target name="build-framework" depends="jar-json">
        <mkdir dir="framework/lib"/>
        <!-- Individually specify the needed libraries, since otherwise that information would not be available readily -->
        <copy todir="framework/lib">
            <fileset dir="build/jar">
                <include name="json.jar"/>
            </fileset>
            <fileset dir="lib">
                <include name="commons-codec*.jar"/>
                <include name="commons-collections*.jar"/>
                <include name="commons-el*.jar"/>
                <include name="commons-fileupload*.jar"/>
                <include name="commons-httpclient-mcf.jar"/>
                <include name="commons-io*.jar"/>
                <include name="commons-logging*.jar"/>
                <include name="eclipse*.jar"/>
                <include name="jasper*.jar"/>
                <include name="jetty*.jar"/>
                <include name="jdbcpool-0.99.jar"/>
                <include name="jsp-2.1*.jar"/>
                <include name="jsp-api*.jar"/>
                <include name="junit*.jar"/>
                <include name="log4j*.jar"/>
                <include name="serializer*.jar"/>
                <include name="servlet-api*.jar"/>
                <include name="tomcat-juli*.jar"/>
                <include name="xalan*.jar"/>
                <include name="xercesImpl-mcf.jar"/>
                <include name="xml-apis*.jar"/>
            </fileset>
            <fileset dir="lib">
                <include name="postgresql*.jar"/>
                <include name="derby*.jar"/>
                <include name="hsqldb*.jar"/>
            </fileset>
        </copy>
        <ant dir="framework"/>
    </target>

    <target name="build-activedirectory-connector" depends="build-framework">
        <mkdir dir="connectors/activedirectory/lib"/>
        <copy todir="connectors/activedirectory/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/activedirectory/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/activedirectory"/>
    </target>
    
    <target name="build-documentum-connector" depends="build-framework">
        <mkdir dir="connectors/documentum/lib"/>
        <copy todir="connectors/documentum/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/documentum/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/documentum"/>
    </target>

    <target name="build-filenet-connector" depends="build-framework">
        <mkdir dir="connectors/filenet/lib"/>
        <copy todir="connectors/filenet/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/filenet/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/filenet"/>
    </target>

    <target name="build-filesystem-connector" depends="build-framework">
        <mkdir dir="connectors/filesystem/lib"/>
        <copy todir="connectors/filesystem/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/filesystem/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/filesystem"/>
    </target>

    <target name="build-gts-connector" depends="build-framework">
        <mkdir dir="connectors/gts/lib"/>
        <copy todir="connectors/gts/lib">
            <fileset dir="framework/lib"/>
            <fileset dir="lib">
	      <include name="poi*.jar"/>
            </fileset>
        </copy>
        <copy todir="connectors/gts/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/gts"/>
    </target>

    <target name="build-jcifs-connector" depends="build-framework">
        <mkdir dir="connectors/jcifs/lib"/>
        <copy todir="connectors/jcifs/lib">
            <fileset dir="framework/lib"/>
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/jcifs"/>
    </target>

    <target name="build-jdbc-connector" depends="build-framework">
        <mkdir dir="connectors/jdbc/lib"/>
        <copy todir="connectors/jdbc/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/jdbc/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/jdbc"/>
    </target>

    <target name="build-livelink-connector" depends="build-framework">
        <mkdir dir="connectors/livelink/lib"/>
        <copy todir="connectors/livelink/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/livelink/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/livelink"/>
    </target>

    <target name="build-solr-connector" depends="build-framework">
        <mkdir dir="connectors/solr/lib"/>
        <copy todir="connectors/solr/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/solr/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/solr"/>
    </target>

    <target name="build-memex-connector" depends="build-framework">
        <mkdir dir="connectors/memex/lib"/>
        <copy todir="connectors/memex/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/memex/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/memex"/>
    </target>

    <target name="build-meridio-connector" depends="build-framework">
        <mkdir dir="connectors/meridio/lib"/>
        <copy todir="connectors/meridio/lib">
            <fileset dir="lib">
                <include name="axis*.jar"/>
                <include name="wsdl4j*.jar"/>
                <include name="castor*.jar"/>
                <include name="commons-discovery*.jar"/>
                <include name="geronimo-activation_1.1_spec*.jar"/>
                <include name="geronimo-javamail_1.4_spec*.jar"/>
            </fileset>
        </copy>
        <copy todir="connectors/meridio/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/meridio/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/meridio"/>
    </target>

    <target name="build-nullauthority-connector" depends="build-framework">
        <mkdir dir="connectors/nullauthority/lib"/>
        <copy todir="connectors/nulloutput/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/nullauthority/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/nullauthority"/>
    </target>

    <target name="build-nulloutput-connector" depends="build-framework">
        <mkdir dir="connectors/nulloutput/lib"/>
        <copy todir="connectors/nulloutput/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/nulloutput/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/nulloutput"/>
    </target>

    <target name="build-rss-connector" depends="build-framework">
        <mkdir dir="connectors/rss/lib"/>
        <copy todir="connectors/rss/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/rss/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/rss"/>
    </target>

    <target name="build-sharepoint-connector" depends="build-framework">
        <mkdir dir="connectors/sharepoint/lib"/>
        <copy todir="connectors/sharepoint/lib">
            <fileset dir="lib">
                <include name="axis*.jar"/>
                <include name="wsdl4j*.jar"/>
                <include name="commons-discovery*.jar"/>
                <include name="geronimo-activation_1.1_spec*.jar"/>
            </fileset>
        </copy>
        <copy todir="connectors/sharepoint/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/sharepoint/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/sharepoint"/>
    </target>

    <target name="build-webcrawler-connector" depends="build-framework">
        <mkdir dir="connectors/webcrawler/lib"/>
        <copy todir="connectors/webcrawler/lib">
            <fileset dir="framework/lib"/>
        </copy>
        <copy todir="connectors/webcrawler/lib">
            <fileset dir="framework/build/jar"/>
        </copy>
        <ant dir="connectors/webcrawler"/>
    </target>

    <target name="deliver-framework" depends="build-framework">
        <mkdir dir="dist/processes"/>
        <copy todir="dist/processes">
            <fileset dir="framework/dist/processes"/>
        </copy>
        <mkdir dir="dist/web"/>
        <copy todir="dist/web">
            <fileset dir="framework/dist/web"/>
        </copy>
        <mkdir dir="dist/doc/framework"/>
        <copy todir="dist/doc/framework">
	  <fileset dir="framework/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-activedirectory-condition" depends="build-activedirectory-connector">
        <available file="connectors/activedirectory/dist" type="dir" property="activedirectory.exists"/>
        <condition property="activedirectory.include">
            <isset property="activedirectory.exists"/>
        </condition>
    </target>

    <target name="deliver-activedirectory-connector" depends="calculate-activedirectory-condition" if="activedirectory.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/activedirectory/dist/lib"/>
        </copy>
        <mkdir dir="dist/doc/activedirectory"/>
        <copy todir="dist/doc/activedirectory">
	  <fileset dir="connectors/activedirectory/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-documentum-condition" depends="build-documentum-connector">
        <available file="connectors/documentum/dist" type="dir" property="documentum.exists"/>
        <condition property="documentum.include">
            <isset property="documentum.exists"/>
        </condition>
    </target>

    <target name="deliver-documentum-connector" depends="calculate-documentum-condition" if="documentum.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/documentum/dist/lib"/>
        </copy>
        <mkdir dir="dist/documentum-server-process"/>
        <copy todir="dist/documentum-server-process">
            <fileset dir="connectors/documentum/dist/server-process"/>
        </copy>
        <mkdir dir="dist/documentum-registry-process"/>
        <copy todir="dist/documentum-registry-process">
            <fileset dir="connectors/documentum/dist/registry-process"/>
        </copy>
        <mkdir dir="dist/doc/documentum"/>
        <copy todir="dist/doc/documentum">
	  <fileset dir="connectors/documentum/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-filenet-condition" depends="build-filenet-connector">
        <available file="connectors/filenet/dist" type="dir" property="filenet.exists"/>
        <condition property="filenet.include">
            <isset property="filenet.exists"/>
        </condition>
    </target>

    <target name="deliver-filenet-connector" depends="calculate-filenet-condition" if="filenet.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/filenet/dist/lib"/>
        </copy>
        <mkdir dir="dist/filenet-server-process"/>
        <copy todir="dist/filenet-server-process">
            <fileset dir="connectors/filenet/dist/server-process"/>
        </copy>
        <mkdir dir="dist/filenet-registry-process"/>
        <copy todir="dist/filenet-registry-process">
            <fileset dir="connectors/filenet/dist/registry-process"/>
        </copy>
        <mkdir dir="dist/doc/filenet"/>
        <copy todir="dist/doc/filenet">
	  <fileset dir="connectors/filenet/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-filesystem-condition" depends="build-filesystem-connector">
        <available file="connectors/filesystem/dist" type="dir" property="filesystem.exists"/>
        <condition property="filesystem.include">
            <isset property="filesystem.exists"/>
        </condition>
    </target>

    <target name="deliver-filesystem-connector" depends="calculate-filesystem-condition" if="filesystem.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/filesystem/dist/lib"/>
        </copy>
        <mkdir dir="dist/doc/filesystem"/>
        <copy todir="dist/doc/filesystem">
	  <fileset dir="connectors/filesystem/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-gts-condition" depends="build-gts-connector">
        <available file="connectors/gts/dist" type="dir" property="gts.exists"/>
        <condition property="gts.include">
            <isset property="gts.exists"/>
        </condition>
    </target>

    <target name="deliver-gts-connector" depends="calculate-gts-condition" if="gts.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/gts/dist/lib"/>
        </copy>
        <mkdir dir="dist/doc/gts"/>
        <copy todir="dist/doc/gts">
	  <fileset dir="connectors/gts/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-jdbc-condition" depends="build-jdbc-connector">
        <available file="connectors/jdbc/dist" type="dir" property="jdbc.exists"/>
        <condition property="jdbc.include">
            <isset property="jdbc.exists"/>
        </condition>
    </target>

    <target name="deliver-jdbc-connector" depends="calculate-jdbc-condition" if="jdbc.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/jdbc/dist/lib"/>
        </copy>
        <mkdir dir="dist/doc/jdbc"/>
        <copy todir="dist/doc/jdbc">
	  <fileset dir="connectors/jdbc/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-jcifs-condition" depends="build-jcifs-connector">
        <available file="connectors/jcifs/dist" type="dir" property="jcifs.exists"/>
        <condition property="jcifs.include">
            <isset property="jcifs.exists"/>
        </condition>
    </target>

    <target name="deliver-jcifs-connector" depends="calculate-jcifs-condition" if="jcifs.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/jcifs/dist/lib"/>
        </copy>
        <mkdir dir="dist/doc/jcifs"/>
        <copy todir="dist/doc/jcifs">
	  <fileset dir="connectors/jcifs/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-livelink-condition" depends="build-livelink-connector">
        <available file="connectors/livelink/dist" type="dir" property="livelink.exists"/>
        <condition property="livelink.include">
            <isset property="livelink.exists"/>
        </condition>
    </target>

    <target name="deliver-livelink-connector" depends="calculate-livelink-condition" if="livelink.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/livelink/dist/lib"/>
        </copy>
        <mkdir dir="dist/doc/livelink"/>
        <copy todir="dist/doc/livelink">
	  <fileset dir="connectors/livelink/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-solr-condition" depends="build-solr-connector">
        <available file="connectors/solr/dist" type="dir" property="solr.exists"/>
        <condition property="solr.include">
            <isset property="solr.exists"/>
        </condition>
    </target>

    <target name="deliver-solr-connector" depends="calculate-solr-condition" if="solr.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/solr/dist/lib"/>
        </copy>
        <mkdir dir="dist/doc/solr"/>
        <copy todir="dist/doc/solr">
	  <fileset dir="connectors/solr/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-memex-condition" depends="build-memex-connector">
        <available file="connectors/memex/dist" type="dir" property="memex.exists"/>
        <condition property="memex.include">
            <isset property="memex.exists"/>
        </condition>
    </target>

    <target name="deliver-memex-connector" depends="calculate-memex-condition" if="memex.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/memex/dist/lib"/>
        </copy>
        <mkdir dir="dist/doc/memex"/>
        <copy todir="dist/doc/memex">
	  <fileset dir="connectors/memex/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-meridio-condition" depends="build-meridio-connector">
        <available file="connectors/meridio/dist" type="dir" property="meridio.exists"/>
        <condition property="meridio.include">
            <isset property="meridio.exists"/>
        </condition>
    </target>

    <target name="deliver-meridio-connector" depends="calculate-meridio-condition" if="meridio.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/meridio/dist/lib"/>
        </copy>
        <mkdir dir="dist/wsdd"/>
        <copy todir="dist/wsdd">
            <fileset dir="connectors/meridio/dist/wsdd"/>
        </copy>
        <mkdir dir="dist/doc/meridio"/>
        <copy todir="dist/doc/meridio">
	  <fileset dir="connectors/meridio/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-nullauthority-condition" depends="build-nullauthority-connector">
        <available file="connectors/nullauthority/dist" type="dir" property="nullauthority.exists"/>
        <condition property="nullauthority.include">
            <isset property="nullauthority.exists"/>
        </condition>
    </target>

    <target name="calculate-nulloutput-condition" depends="build-nulloutput-connector">
        <available file="connectors/nulloutput/dist" type="dir" property="nulloutput.exists"/>
        <condition property="nulloutput.include">
            <isset property="nulloutput.exists"/>
        </condition>
    </target>

    <target name="deliver-nullauthority-connector" depends="calculate-nullauthority-condition" if="nullauthority.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/nullauthority/dist/lib"/>
        </copy>
        <mkdir dir="dist/doc/nullauthority"/>
        <copy todir="dist/doc/nullauthority">
	  <fileset dir="connectors/nullauthority/dist/doc"/>
        </copy>
    </target>

    <target name="deliver-nulloutput-connector" depends="calculate-nulloutput-condition" if="nulloutput.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/nulloutput/dist/lib"/>
        </copy>
        <mkdir dir="dist/doc/nulloutput"/>
        <copy todir="dist/doc/nulloutput">
	  <fileset dir="connectors/nulloutput/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-rss-condition" depends="build-rss-connector">
        <available file="connectors/rss/dist" type="dir" property="rss.exists"/>
        <condition property="rss.include">
            <isset property="rss.exists"/>
        </condition>
    </target>

    <target name="deliver-rss-connector" depends="calculate-rss-condition" if="rss.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/rss/dist/lib"/>
        </copy>
        <mkdir dir="dist/doc/rss"/>
        <copy todir="dist/doc/rss">
	  <fileset dir="connectors/rss/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-sharepoint-condition" depends="build-sharepoint-connector">
        <available file="connectors/sharepoint/dist" type="dir" property="sharepoint.exists"/>
        <condition property="sharepoint.include">
            <isset property="sharepoint.exists"/>
        </condition>
    </target>

    <target name="deliver-sharepoint-connector" depends="calculate-sharepoint-condition" if="sharepoint.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/sharepoint/dist/lib"/>
        </copy>
        <mkdir dir="dist/wsdd"/>
        <copy todir="dist/wsdd">
            <fileset dir="connectors/sharepoint/dist/wsdd"/>
        </copy>
        <mkdir dir="dist/doc/sharepoint"/>
        <copy todir="dist/doc/sharepoint">
	  <fileset dir="connectors/sharepoint/dist/doc"/>
        </copy>
    </target>

    <target name="calculate-webcrawler-condition" depends="build-webcrawler-connector">
        <available file="connectors/webcrawler/dist" type="dir" property="webcrawler.exists"/>
        <condition property="webcrawler.include">
            <isset property="webcrawler.exists"/>
        </condition>
    </target>

    <target name="deliver-webcrawler-connector" depends="calculate-webcrawler-condition" if="webcrawler.include">
        <mkdir dir="dist/lib"/>
        <copy todir="dist/lib">
            <fileset dir="connectors/webcrawler/dist/lib"/>
        </copy>
        <mkdir dir="dist/doc/webcrawler"/>
        <copy todir="dist/doc/webcrawler">
	  <fileset dir="connectors/webcrawler/dist/doc"/>
        </copy>
    </target>

    <target name="cleanup-example">
        <delete file="dist/example/connectors.xml"/>
        <delete file="dist/example/properties.xml"/>
    </target>
    
    <target name="deliver-framework-example" depends="cleanup-example,build-framework">
        <mkdir dir="dist/example"/>
        <copy todir="dist/example">
            <fileset dir="framework/dist/example"/>
        </copy>
    </target>
    
    <target name="deliver-activedirectory-example" depends="deliver-framework-example,build-activedirectory-connector,calculate-activedirectory-condition" if="activedirectory.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/activedirectory/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your authority connectors here --&gt;" value="&lt;!-- Add your authority connectors here --&gt;&#0010;  &lt;authorityconnector name=&quot;Active Directory&quot; class=&quot;org.apache.manifoldcf.authorities.authorities.activedirectory.ActiveDirectoryAuthority&quot;/&gt;"/>
    </target>

    <target name="deliver-documentum-example" depends="deliver-framework-example,build-documentum-connector,calculate-documentum-condition" if="documentum.include">
        <mkdir dir="dist/example/documentum-server-process"/>
        <copy todir="dist/example/documentum-server-process">
            <fileset dir="connectors/documentum/dist/server-process"/>
        </copy>
        <mkdir dir="dist/example/documentum-registry-process"/>
        <copy todir="dist/example/documentum-registry-process">
            <fileset dir="connectors/documentum/dist/registry-process"/>
        </copy>
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/documentum/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your authority connectors here --&gt;" value="&lt;!-- Add your authority connectors here --&gt;&#0010;  &lt;authorityconnector name=&quot;Documentum&quot; class=&quot;org.apache.manifoldcf.crawler.authorities.DCTM.AuthorityConnector&quot;/&gt;"/>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your repository connectors here --&gt;" value="&lt;!-- Add your repository connectors here --&gt;&#0010;  &lt;repositoryconnector name=&quot;Documentum&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.DCTM.DCTM&quot;/&gt;"/>
    </target>

    <target name="deliver-filesystem-example" depends="deliver-framework-example,build-filesystem-connector,calculate-filesystem-condition" if="filesystem.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/filesystem/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your repository connectors here --&gt;" value="&lt;!-- Add your repository connectors here --&gt;&#0010;  &lt;repositoryconnector name=&quot;File system&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.filesystem.FileConnector&quot;/&gt;"/>
    </target>

    <target name="deliver-filenet-example" depends="deliver-framework-example,build-filenet-connector,calculate-filenet-condition" if="filenet.include">
        <mkdir dir="dist/example/filenet-server-process"/>
        <copy todir="dist/example/filenet-server-process">
            <fileset dir="connectors/filenet/dist/server-process"/>
        </copy>
        <mkdir dir="dist/example/filenet-registry-process"/>
        <copy todir="dist/example/filenet-registry-process">
            <fileset dir="connectors/filenet/dist/registry-process"/>
        </copy>
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/filenet/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your repository connectors here --&gt;" value="&lt;!-- Add your repository connectors here --&gt;&#0010;  &lt;repositoryconnector name=&quot;FileNet&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.filenet.FilenetConnector&quot;/&gt;"/>
    </target>

    <target name="deliver-gts-example" depends="deliver-framework-example,build-gts-connector,calculate-gts-condition" if="gts.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/gts/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your output connectors here --&gt;" value="&lt;!-- Add your output connectors here --&gt;&#0010;  &lt;outputconnector name=&quot;MetaCarta GTS&quot; class=&quot;org.apache.manifoldcf.agents.output.gts.GTSConnector&quot;/&gt;"/>
    </target>

    <target name="deliver-jcifs-example" depends="deliver-framework-example,build-jcifs-connector,calculate-jcifs-condition" if="jcifs.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/jcifs/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your repository connectors here --&gt;" value="&lt;!-- Add your repository connectors here --&gt;&#0010;  &lt;repositoryconnector name=&quot;Windows shares&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.sharedrive.SharedDriveConnector&quot;/&gt;"/>
    </target>

    <target name="deliver-jdbc-example" depends="deliver-framework-example,build-jdbc-connector,calculate-jdbc-condition" if="jdbc.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/jdbc/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your repository connectors here --&gt;" value="&lt;!-- Add your repository connectors here --&gt;&#0010;  &lt;repositoryconnector name=&quot;JDBC&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.jdbc.JDBCConnector&quot;/&gt;"/>
    </target>

    <target name="deliver-livelink-example" depends="deliver-framework-example,build-livelink-connector,calculate-livelink-condition" if="livelink.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/livelink/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your authority connectors here --&gt;" value="&lt;!-- Add your authority connectors here --&gt;&#0010;  &lt;authorityconnector name=&quot;LiveLink&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.livelink.LivelinkAuthority&quot;/&gt;"/>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your repository connectors here --&gt;" value="&lt;!-- Add your repository connectors here --&gt;&#0010;  &lt;repositoryconnector name=&quot;LiveLink&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.livelink.LivelinkConnector&quot;/&gt;"/>
    </target>

    <target name="deliver-memex-example" depends="deliver-framework-example,build-memex-connector,calculate-memex-condition" if="memex.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/memex/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your authority connectors here --&gt;" value="&lt;!-- Add your authority connectors here --&gt;&#0010;  &lt;authorityconnector name=&quot;Memex Patriarch&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.memex.MemexAuthority&quot;/&gt;"/>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your repository connectors here --&gt;" value="&lt;!-- Add your repository connectors here --&gt;&#0010;  &lt;repositoryconnector name=&quot;Memex Patriarch&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.memex.MemexConnector&quot;/&gt;"/>
    </target>

    <target name="deliver-meridio-example" depends="deliver-framework-example,build-meridio-connector,calculate-meridio-condition" if="meridio.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/meridio/dist/lib"/>
        </copy>
        <mkdir dir="dist/example/wsdd"/>
        <copy todir="dist/example/wsdd">
            <fileset dir="connectors/meridio/dist/wsdd"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your authority connectors here --&gt;" value="&lt;!-- Add your authority connectors here --&gt;&#0010;  &lt;authorityconnector name=&quot;Meridio&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.meridio.MeridioAuthority&quot;/&gt;"/>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your repository connectors here --&gt;" value="&lt;!-- Add your repository connectors here --&gt;&#0010;  &lt;repositoryconnector name=&quot;Meridio&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.meridio.MeridioConnector&quot;/&gt;"/>
        <replace file="dist/example/properties.xml" token="&lt;!-- WSDD references --&gt;" value="&lt;!-- WSDD references --&gt;&#0010;  &lt;property name=&quot;org.apache.manifoldcf.meridio.wsddpath&quot; value=&quot;./wsdd/meridio-client-config.wsdd&quot;/&gt;"/>
    </target>

    <target name="deliver-nullauthority-example" depends="deliver-framework-example,build-nullauthority-connector,calculate-nullauthority-condition" if="nullauthority.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/nullauthority/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your authority connectors here --&gt;" value="&lt;!-- Add your authority connectors here --&gt;&#0010;  &lt;authorityconnector name=&quot;Null&quot; class=&quot;org.apache.manifoldcf.authorities.authorities.nullauthority.NullAuthority&quot;/&gt;"/>
    </target>

    <target name="deliver-nulloutput-example" depends="deliver-framework-example,build-nulloutput-connector,calculate-nulloutput-condition" if="nulloutput.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/nulloutput/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your output connectors here --&gt;" value="&lt;!-- Add your output connectors here --&gt;&#0010;  &lt;outputconnector name=&quot;Null&quot; class=&quot;org.apache.manifoldcf.agents.output.nullconnector.NullConnector&quot;/&gt;"/>
    </target>

    <target name="deliver-rss-example" depends="deliver-framework-example,build-rss-connector,calculate-rss-condition" if="rss.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/rss/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your repository connectors here --&gt;" value="&lt;!-- Add your repository connectors here --&gt;&#0010;  &lt;repositoryconnector name=&quot;RSS&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.rss.RSSConnector&quot;/&gt;"/>
    </target>

    <target name="deliver-sharepoint-example" depends="deliver-framework-example,build-sharepoint-connector,calculate-sharepoint-condition" if="sharepoint.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/sharepoint/dist/lib"/>
        </copy>
        <mkdir dir="dist/example/wsdd"/>
        <copy todir="dist/example/wsdd">
            <fileset dir="connectors/sharepoint/dist/wsdd"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your repository connectors here --&gt;" value="&lt;!-- Add your repository connectors here --&gt;&#0010;  &lt;repositoryconnector name=&quot;SharePoint&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.sharepoint.SharePointRepository&quot;/&gt;"/>
        <replace file="dist/example/properties.xml" token="&lt;!-- WSDD references --&gt;" value="&lt;!-- WSDD references --&gt;&#0010;  &lt;property name=&quot;org.apache.manifoldcf.sharepoint.wsddpath&quot; value=&quot;./wsdd/sharepoint-client-config.wsdd&quot;/&gt;"/>
    </target>

    <target name="deliver-solr-example" depends="deliver-framework-example,build-solr-connector,calculate-solr-condition" if="solr.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/solr/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your output connectors here --&gt;" value="&lt;!-- Add your output connectors here --&gt;&#0010;  &lt;outputconnector name=&quot;Solr&quot; class=&quot;org.apache.manifoldcf.agents.output.solr.SolrConnector&quot;/&gt;"/>
    </target>

    <target name="deliver-webcrawler-example" depends="deliver-framework-example,build-webcrawler-connector,calculate-webcrawler-condition" if="webcrawler.include">
        <mkdir dir="dist/example/connector-lib"/>
        <copy todir="dist/example/connector-lib">
            <fileset dir="connectors/webcrawler/dist/lib"/>
        </copy>
        <replace file="dist/example/connectors.xml" token="&lt;!-- Add your repository connectors here --&gt;" value="&lt;!-- Add your repository connectors here --&gt;&#0010;  &lt;repositoryconnector name=&quot;Web&quot; class=&quot;org.apache.manifoldcf.crawler.connectors.webcrawler.WebcrawlerConnector&quot;/&gt;"/>
    </target>

    <target name="deliver-example" depends="deliver-framework-example,deliver-activedirectory-example,deliver-documentum-example,deliver-filesystem-example,deliver-filenet-example,deliver-gts-example,deliver-jcifs-example,deliver-jdbc-example,deliver-livelink-example,deliver-memex-example,deliver-meridio-example,deliver-nullauthority-example,deliver-nulloutput-example,deliver-rss-example,deliver-sharepoint-example,deliver-solr-example,deliver-webcrawler-example">
        <!-- Build a manifest file.  There doesn't seem to be any good way to do this automatically in ant without developing my own
        custom task, so I've hard coded all the class path libs. -->
        <mkdir dir="build/example"/>
        <manifest file="build/example/manifest">
            <attribute name="Main-Class" value="org.apache.manifoldcf.jettyrunner.ManifoldCFJettyRunner"/>
            <attribute name="Class-Path" value="lib/commons-codec.jar lib/commons-collections.jar lib/commons-el.jar lib/commons-fileupload.jar lib/commons-httpclient-mcf.jar lib/commons-io.jar lib/commons-logging.jar lib/hsqldb.jar lib/derbyclient.jar lib/derby.jar lib/derbyLocale_cs.jar lib/derbyLocale_de_DE.jar lib/derbyLocale_es.jar lib/derbyLocale_fr.jar lib/derbyLocale_hu.jar lib/derbyLocale_it.jar lib/derbyLocale_ja_JP.jar lib/derbyLocale_ko_KR.jar lib/derbyLocale_pl.jar lib/derbyLocale_pt_BR.jar lib/derbyLocale_ru.jar lib/derbyLocale_zh_CN.jar lib/derbyLocale_zh_TW.jar lib/derbynet.jar lib/derbyrun.jar lib/derbytools.jar lib/eclipse-ecj.jar lib/jasper-6.0.24.jar lib/jasper-el-6.0.24.jar lib/jdbcpool-0.99.jar lib/jetty-6.1.22.jar lib/jetty-util-6.1.22.jar lib/jsp-api-2.1-glassfish-9.1.1.B60.25.p2.jar lib/json.jar lib/mcf-agents.jar lib/mcf-core.jar lib/mcf-jetty-runner.jar lib/mcf-pull-agent.jar lib/mcf-ui-core.jar lib/log4j-1.2.jar lib/postgresql.jar lib/serializer.jar lib/servlet-api-2.5-20081211.jar lib/tomcat-juli-6.0.24.jar lib/xalan2.jar lib/xercesImpl-mcf.jar lib/xml-apis.jar"/>
        </manifest>
        <jar destfile="dist/example/start.jar" manifest="build/example/manifest"/>
    </target>
    
    <target name="calculate-filesystem-tests-condition" depends="calculate-filesystem-condition,calculate-nulloutput-condition">
      <condition property="filesystem-tests.include">
        <and>
            <isset property="filesystem.include"/>
            <isset property="nulloutput.include"/>
        </and>
      </condition>
    </target>

    <target name="calculate-sharepoint-tests-condition" depends="calculate-sharepoint-condition,calculate-nulloutput-condition">
      <condition property="sharepoint-tests.include">
        <and>
            <isset property="sharepoint.include"/>
            <isset property="nulloutput.include"/>
        </and>
      </condition>
    </target>

    <target name="compile-filesystem-tests" depends="build-framework,calculate-filesystem-tests-condition,build-filesystem-connector,build-nulloutput-connector" if="filesystem-tests.include">
        <mkdir dir="build/filesystem-tests/classes"/>
        <javac srcdir="tests/filesystem" destdir="build/filesystem-tests/classes" target="1.5" source="1.5" debug="true" debuglevel="lines,vars,source">
            <classpath>
                 <fileset dir="framework/lib"> 
                    <include name="*.jar"/> 
                </fileset>
                <pathelement location="framework/build/core/classes"/>
                <pathelement location="framework/build/ui-core/classes"/>
                <pathelement location="framework/build/agents/classes"/>
                <pathelement location="framework/build/pull-agent/classes"/>
                <pathelement location="framework/build/tests/classes"/>
                <pathelement location="connectors/filesystem/build/connector/classes"/>
                <pathelement location="connectors/nulloutput/build/connector/classes"/>
            </classpath>
        </javac>
    </target>

    <target name="compile-sharepoint-tests" depends="build-framework,calculate-sharepoint-tests-condition,build-sharepoint-connector,build-nulloutput-connector" if="sharepoint-tests.include">
        <mkdir dir="build/sharepoint-tests/classes"/>
        <javac srcdir="tests/sharepoint" destdir="build/sharepoint-tests/classes" target="1.5" source="1.5" debug="true" debuglevel="lines,vars,source">
            <classpath>
                 <fileset dir="framework/lib"> 
                    <include name="*.jar"/> 
                </fileset>
                <pathelement location="framework/build/core/classes"/>
                <pathelement location="framework/build/ui-core/classes"/>
                <pathelement location="framework/build/agents/classes"/>
                <pathelement location="framework/build/pull-agent/classes"/>
                <pathelement location="framework/build/tests/classes"/>
                <pathelement location="connectors/sharepoint/build/connector/classes"/>
                <pathelement location="connectors/nulloutput/build/connector/classes"/>
            </classpath>
        </javac>
    </target>

    <target name="run-filesystem-tests" depends="compile-filesystem-tests,calculate-filesystem-tests-condition" if="filesystem-tests.include">
        <mkdir dir="test-output/filesystem"/>
        <junit fork="true" maxmemory="128m" dir="test-output/filesystem" showoutput="true">
            <classpath>
                <fileset dir="framework/lib">
                    <include name="*.jar"/>
                </fileset>
                <pathelement location="framework/build/core/classes"/>
                <pathelement location="framework/build/ui-core/classes"/>
                <pathelement location="framework/build/agents/classes"/>
                <pathelement location="framework/build/pull-agent/classes"/>
                <pathelement location="framework/build/tests/classes"/>
                <pathelement location="connectors/filesystem/build/connector/classes"/>
                <pathelement location="connectors/nulloutput/build/connector/classes"/>
                <pathelement location="build/filesystem-tests/classes"/>
            </classpath>
            <test name="org.apache.manifoldcf.filesystem_tests.Sanity" todir="test-output/filesystem"/>
            <test name="org.apache.manifoldcf.filesystem_tests.APISanity" todir="test-output/filesystem"/>
            <!-- MHL -->
        </junit>
    </target>

    <target name="run-sharepoint-tests" depends="compile-sharepoint-tests,calculate-sharepoint-tests-condition" if="sharepoint-tests.include">
        <mkdir dir="test-output/sharepoint"/>
        <junit fork="true" maxmemory="128m" dir="test-output/sharepoint" showoutput="true">
            <classpath>
                <fileset dir="framework/lib">
                    <include name="*.jar"/>
                </fileset>
                <pathelement location="framework/build/core/classes"/>
                <pathelement location="framework/build/ui-core/classes"/>
                <pathelement location="framework/build/agents/classes"/>
                <pathelement location="framework/build/pull-agent/classes"/>
                <pathelement location="framework/build/tests/classes"/>
                <pathelement location="connectors/sharepoint/build/connector/classes"/>
                <pathelement location="connectors/nulloutput/build/connector/classes"/>
                <pathelement location="build/sharepoint-tests/classes"/>
            </classpath>
            <!-- MHL -->
        </junit>
    </target>

    <target name="run-tests" depends="run-filesystem-tests,run-sharepoint-tests"/>
    
    <target name="deliver-open-connectors" depends="deliver-nullauthority-connector,deliver-activedirectory-connector,deliver-filesystem-connector,deliver-rss-connector,deliver-webcrawler-connector,deliver-jdbc-connector"/>
    
    <target name="deliver-output-connectors" depends="deliver-gts-connector,deliver-solr-connector,deliver-nulloutput-connector"/>
    
    <target name="deliver-lgpl-connectors" depends="deliver-jcifs-connector"/>
    
    <target name="deliver-proprietary-connectors" depends="deliver-documentum-connector,deliver-filenet-connector,deliver-livelink-connector,deliver-memex-connector,deliver-meridio-connector,deliver-sharepoint-connector"/>
    
    <target name="deliver" depends="deliver-framework,deliver-open-connectors,deliver-output-connectors,deliver-lgpl-connectors,deliver-proprietary-connectors,deliver-example"/>

    <target name="dist-zip" depends="deliver">
	<zip destfile="manifoldcf-SNAPSHOT-0.1.zip" basedir="dist" update="true"/>
    </target>
    
    <target name="dist-tar" depends="deliver">
	<tar destfile="manifoldcf-SNAPSHOT-0.1.tar.gz" basedir="dist" compression="gzip" longfile="gnu"/>
    </target>

    <target name="dist" depends="dist-zip,dist-tar"/>
    
    <target name="all" depends="deliver,run-tests"/>
    
</project>
