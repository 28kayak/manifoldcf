#!/usr/bin/python -O

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# IF YOU ARE READING THIS, YOU ARE VIOLATING YOUR LICENSE AGREEMENT.


# $Id$

import sys
import time
import errno
import subprocess

sys.path.append("/usr/lib/metacarta/")
import MetaHelpers

def getpidfile(pidpath, kind):
    """Check the process references by pidpath, using kind to describe it
    in messages.  Report errors if it not not there."""
    try:
        pid, reason = MetaHelpers.check_process_alive(pidpath, verbose=True)
    except IOError, e:
        if e.errno == errno.ENOENT:
            print "No %s pid file, did it ever start?" % kind
            return
        raise

    if not pid:
        print "No %s server listening." % kind
        return

    return pid

def invoke_script( argumentlist, input=None, allow_errors=False ):
    programname = argumentlist[0]
    program = subprocess.Popen(argumentlist,
                               0,
                               None,
                               subprocess.PIPE,
                               subprocess.PIPE,
                               subprocess.PIPE)
    (outputtext, errortext) = program.communicate(input)
    retcode = program.wait()
    if allow_errors == False and retcode != 0:
        raise Exception("Error response from %s: %d, message = [%s]" % (programname,retcode,errortext))
    return outputtext

def process_argument( mystring ):
    if mystring == None:
        return ''
    return mystring

if __name__ == '__main__':
    while True:
	pid = getpidfile( "/var/run/metacarta/java-pids/documentumconnector-server.pid", "Documentum server daemon" )
	if pid == None:
	    # Attempt to start the server daemon
	    try:
		print "No metacarta-documentumconnector-server daemon running; starting it"
		MetaHelpers.touch('/var/run/metacarta/java-pids/documentumconnector-server.pid')
                MetaHelpers.touch('/var/log/metacarta/java-agents/documentumconnector-server.log')
                invoke_script( [ '/usr/lib/metacarta/documentumconnector-server', 'start' ] )
	    except Exception, e:
		print "Start attempt failed: %s" % e
	time.sleep(60)

	    
